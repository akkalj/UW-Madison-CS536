
int var1;

void test_fn_void1(int param1) {
    int count;
    cout << "void function1\n";
}

void test_fn_void2(int param1) {
    int count;
    cout << "void function2\n";
    return;
}

int test_fn(int a, bool b){
    int c;
    bool d;
    int e;
    c = a + var1;
    cout << "test_fn: ";
    cout << c;
    cout << "\n";
    return 0;
    cout << "output after return\n";
    d = b;
    return 0;
}

int recursion_fn(int input){
    if(input <= 1){
        return input;
    }else{
        return recursion_fn(input-1) + recursion_fn(input-2);
    }
}

int while_loop_addition_fn(int num) {
    int result;
    result = 0;
    while(num > 0) {
        result = result + num;
        num --;
    }
    return result;
}

int test_local_in_if(bool branch) {
    int a;
    int b;
    int result;
    a = 1;
    b = 2;
    if (branch) {
        int c;
        int d;
        c = 4;
        d = 8;
        result = a+b+c+d;
    } else {
        int c;
        c = 4;
        result = a+b+c;
    }
    while(a>0) {
        int c;
        c = a;
        a --;
    }
    return result;
}

void main() {
    bool var2;
    bool b1;
    bool b2;
    int num1;
    int num2;
    // var init
    var1 = -8;
    var2 = true;
    b1 = true;
    // function test
    test_fn_void1(1);
    test_fn_void2(2);
    test_fn(var1, var2);
    cout << "Fibonacci Recursion Test:\n";
    cout << recursion_fn(0);
    cout << "\n";
    cout << recursion_fn(1);
    cout << "\n";
    cout << recursion_fn(10);
    cout << "\n";
    cout << while_loop_addition_fn(100);
    cout << "\n";
    cout << test_local_in_if(true);
    cout << "\n";
    cout << test_local_in_if(false);
    cout << "\n";
    // write test
    cout << "Hello world!";
    cout << "\n";
    cout << var1;
    cout << "\n";
    cout << var1 + 8;
    cout << "\n";
    cout << var1 - 1;
    cout << "\n";
    cout << var1 * 3;
    cout << "\n";
    cout << var1 / 2;
    cout << "\n";
    var1 ++;
    cout << var1;
    cout << "\n";
    var1 --;
    cout << var1;
    cout << "\n";
    cout << var2;
    cout << "\n";
    cout << !var2;
    cout << "\n";
    cout << true && false;
    cout << " ";
    cout << true && true;
    cout << " ";
    cout << true || false;
    cout << " ";
    cout << false || false;
    cout << "\n";
    // <
    cout << 1 < 2;
    cout << " ";
    cout << 2 < 1;
    cout << " ";
    // >
    cout << 1 > 2;
    cout << " ";
    cout << 2 > 1;
    cout << " ";
    // <=
    cout << 1 <= 2;
    cout << " ";
    cout << 2 <= 1;
    cout << " ";
    cout << 2 <= 2;
    // >=
    cout << " ";
    cout << 1 >= 2;
    cout << " ";
    cout << 2 >= 1;
    cout << " ";
    cout << 2 >= 2;
    cout << " ";
    // ==
    cout << 2 == 1;
    cout << " ";
    cout << 2 == 2;
    cout << " ";
    // !=
    cout << 2 != 1;
    cout << " ";
    cout << 2 != 2;
    cout << "\n";

    // if-then
    if(true){
        cout << "branch test 01";
        cout << "\n";
    }
    if(false){
        cout << "branch test 01 failed";
        cout << "\n";
    }
    if(var2=true){
        cout << "branch test 02";
        cout << "\n";
    }
    if(var2=false){
        cout << "branch test 02 failed";
        cout << "\n";
    }
    // if-then-else
    if (true) {
        cout << "branch test 03";
        cout << "\n";
    }else {
        cout << "branch test 03 failed";
        cout << "\n";
    }
    // if-then-else
    if (false) {
        cout << "branch test 04 failed";
        cout << "\n";
    }else {
        cout << "branch test 04";
        cout << "\n";
    }
    // while loop
    num1 = 0;
    while(num1 < 10) {
        cout << num1;
        num1++;
    }
    cout << "\n";
    // string equal
    cout << "yidong" == "yidong";
    cout << "yidong" == "yidong2";
    cout << "yidong" != "yidong2";
    cout << "yidong" != "yidong";
    cout << "\n";
    // short-circuit
    cout << true || b1 = false;
    cout << 2==3 && b1 = false;
    cout << b1;
    cout << "\n";
    // read test
    cin >> b2;
    cout << b2;
    cout << "\n";
    cin >> num1;
    cout << num1;
    cout << "\n";
}
